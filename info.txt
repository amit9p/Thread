# Import necessary modules
import pytest
from unittest.mock import Mock
from qlik_tools.adapters import Adapter
from qlik_task import notify_Qlik

def test_notify_Qlik(mocker):
    # Mock the Adapter class and its post method
    mock_adapter = Mock(spec=Adapter)
    mock_response = Mock()
    mocker.patch.object(mock_adapter, 'post', return_value=mock_response)

    # Define the test data
    test_payload = {"key": "value"}
    test_api_endpoint = "test_endpoint"
    
    # Call the notify_Qlik function with the mock adapter and test data
    response = notify_Qlik(adapter=mock_adapter, payload=test_payload, api_endpoint=test_api_endpoint)

    # Construct the expected URL
    expected_url = f"{mock_adapter.base_url}/{test_api_endpoint}?Xrfkey={mock_adapter.xrf_key}"

    # Assertions to verify correct behavior
    mock_adapter.post.assert_called_once_with(url=expected_url, json=test_payload)
    assert response == mock_response
